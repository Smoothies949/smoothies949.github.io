let demoState = {
  notes: [],
  lastDeletedNote: null,
  activeFeatures: new Set(),
  currentLanguage: 'en',
  timer: {
    duration: 25 * 60,
    remaining: 25 * 60,
    isRunning: false,
    interval: null,
    initialized: false
  },
  focus: {
    isActive: false
  },
  voice: {
    isRecording: false
  },
  noise: {
    context: null,
    oscillator: null,
    isPlaying: false,
    initialized: false
  },
  accessibility: {
    initialized: false
  },
  literalLanguage: {
    enabled: false
  },
  scrollAnimations: {
    initialized: false
  },
  draggableTimer: {
    initialized: false
  }
};

const translations = {
  // Complete English translations object for script.js
// Replace your existing 'en' object with this complete version:

en: {
  // Sticky Bar
  'sticky.free': 'Free To Use',
  'sticky.journey': 'Be part of Cocoon\'s journey! Your insights help me create the perfect browsing experience.',
  'sticky.share': 'Share Your Thoughts ‚Üí',
  
  // Control Panel
  'control.helper': 'Click to disable',
  
  // Focus
  'focus.scroll': 'Scroll down to see focus mode in action!',
  
  // Timer
  'timer.focus': 'Focus Timer',
  'timer.start': 'Start',
  'timer.pause': 'Pause',
  'timer.reset': 'Reset',
  
  // Notes
  'notes.header': 'üß† Quick Brain Dump',
  'notes.placeholder': 'Capture your thoughts instantly...',
  'notes.voice': 'üéôÔ∏è Voice',
  'notes.save': 'üíæ Save',
  'notes.undo': '‚Ü∂ Undo',
  
  // Accessibility
  'accessibility.header': '‚ôø Accessibility',
  'accessibility.contrast': 'Contrast',
  'accessibility.saturation': 'Saturation',
  'accessibility.fontSize': 'Font Size',
  
  // Background Noise
  'noise.header': 'üîä Background Noise',
  'noise.select': 'Select ambient sound...',
  'noise.rain': 'üåßÔ∏è Rain',
  'noise.forest': 'üå≤ Forest',
  'noise.ocean': 'üåä Ocean Waves',
  'noise.white': 'üìª White Noise',
  'noise.coffee': '‚òï Coffee Shop',
  'noise.volume': 'Volume',
  'noise.play': '‚ñ∂Ô∏è Play',
  'noise.stop': '‚èπÔ∏è Stop',
  
  // Site Blocker
  'blocker.header': 'üö´ Site Blocker',
  'blocker.placeholder': 'Enter website to block...',
  'blocker.add': '+ Block',
  'blocker.active': 'üîí Blocking Active',
  'blocker.pause': '‚è∏Ô∏è Pause 5min',
  
  // Font Controls
  'font.header': 'üî§ Font Controls',
  'font.family': 'Font Family',
  'font.default': 'System Default',
  'font.friendly': 'Reading-friendly Font',
  'font.size': 'Font Size',
  'font.lineHeight': 'Line Height',
  'font.reset': '‚Ü∫ Reset',
  'font.reading': 'üìñ Reading Mode',
  
  // Navigation
  'nav.features': 'Features',
  'nav.reviews': 'Reviews',
  'nav.founder': 'Founder Message',
  'nav.join': 'Join the Journey',
  
  // Hero Section
  'hero.title': 'Transform Your Digital Life in 60 Seconds',
  'hero.subtitle': 'Stop Struggling with Digital Overwhelm',
  'hero.description': 'Be part of Cocoon and help it grow into a true \'All-in-one\' extension!',
  'hero.primary': 'Use Cocoon - For Free',
  'hero.demo': 'Try Live Demo',
  
  // Social Proof
  'social.title': 'Trusted by Leading AI Assistants & Me',
  'social.rating': 'I Give It ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê',
  'social.users': '50K+ Active Users',
  'social.me': 'just me',
  'social.approved': 'AI-Approved Tools',
  'social.friendly': 'User friendly',
  
  // Problems Section
  'problems.title': 'Tired of Digital Chaos Ruining Your Focus?',
  'problems.subtitle': 'You\'re not alone. These pain points destroy productivity and peace of mind for millions every day:',
  'problems.overwhelming.title': 'Overwhelming Websites',
  'problems.overwhelming.desc': 'Too many flashing ads, autoplaying videos, and cluttered interfaces that assault your senses and derail your concentration.',
  'problems.time.title': 'Time Blindness & Procrastination',
  'problems.time.desc': 'Hours disappear into social media scrolls and rabbit holes while important tasks remain undone, creating stress and guilt.',
  'problems.cognitive.title': 'Cognitive Overload',
  'problems.cognitive.desc': 'Your brain feels tired from processing too much information, making it impossible to think clearly or make decisions.',
  'problems.barriers.title': 'Accessibility Barriers',
  'problems.barriers.desc': 'Websites ignore user needs with harsh colors, tiny fonts, and confusing navigation that make browsing painful.',
  'problems.mental.title': 'Mental Health Impact',
  'problems.mental.desc': 'Constant digital overwhelm increases anxiety, depression, and burnout, affecting your real-world relationships and well-being.',
  'problems.cat.title': 'Secret Cat Therapy',
  'problems.cat.desc': 'Sometimes you just need a cute cat to remind you that the internet can still be a wonderful place. üê±',
  
  // Solutions Section
  'solutions.title': 'Finally, A Digital Sanctuary That Actually Works',
  'solutions.subtitle': 'Cocoon transforms your browsing experience with gentle, intelligent tools designed by someone who truly understands the struggle.',
  'solutions.focus.title': 'Instant Focus Mode',
  'solutions.focus.desc': 'Dim distractions and highlight what matters with one click. Perfect for minds that need visual simplification.',
  'solutions.focus.feat1': 'Adjustable dimming intensity',
  'solutions.focus.feat2': 'Smart content recognition',
  'solutions.focus.feat3': 'Works on ANY website',
  'solutions.focus.feat4': 'Keyboard shortcuts',
  'solutions.focus.try': 'Try Focus Mode',
  'solutions.accessibility.title': 'Sensory-Friendly Controls',
  'solutions.accessibility.desc': 'Customize colors, contrast, motion, and fonts to match your sensory needs. No more eye strain or visual overwhelm.',
  'solutions.accessibility.feat1': 'Real-time color adjustments',
  'solutions.accessibility.feat2': 'Motion reduction settings',
  'solutions.accessibility.feat3': 'Reading-friendly fonts',
  'solutions.accessibility.feat4': 'High contrast modes',
  'solutions.accessibility.try': 'Try Color and Contrast Slider',
  'solutions.notes.title': 'Brain Dump & Memory Aid',
  'solutions.notes.desc': 'Capture fleeting thoughts instantly with voice notes and quick text. Never lose an important idea again.',
  'solutions.notes.feat1': 'Voice recording capability',
  'solutions.notes.feat2': 'Auto bullet-point formatting',
  'solutions.notes.feat3': 'Instant note saving',
  'solutions.notes.feat4': 'Searchable note history',
  'solutions.notes.try': 'Try Brain Dump',
  'solutions.communication.title': 'Communication Support',
  'solutions.communication.desc1': 'Understand',
  'solutions.communication.idiom': 'idioms and sarcasm',
  'solutions.communication.tooltip': 'Figures of speech explained clearly',
  'solutions.communication.desc2': 'with our literal language translator. Navigate social media safely.',
  'solutions.communication.feat1': 'Idiom translation tool tips',
  'solutions.communication.feat2': 'Sarcasm detection',
  'solutions.communication.feat3': 'Comment filtering',
  'solutions.communication.feat4': 'Pre-written responses',
  'solutions.communication.try': 'Try Communication Aid',
  'solutions.soundscapes.title': 'Calming Soundscapes',
  'solutions.soundscapes.desc': 'Block jarring sounds and replace them with peaceful background noise. Create your perfect audio environment.',
  'solutions.soundscapes.feat1': 'Nature sounds library',
  'solutions.soundscapes.feat2': 'White/pink/brown noise',
  'solutions.soundscapes.feat3': 'Volume normalization',
  'solutions.soundscapes.feat4': 'Sound blocking filters',
  'solutions.soundscapes.try': 'Try Background Sounds',
  'solutions.timer.title': 'Gentle Time Management',
  'solutions.timer.desc': 'Draggable Pomodoro timer that follows you across tabs. Visual progress tracking without pressure or stress.',
  'solutions.timer.feat1': 'Customizable work/break periods',
  'solutions.timer.feat2': 'Visual and audio cues',
  'solutions.timer.feat3': 'Cross-tab persistence',
  'solutions.timer.feat4': 'Gentle notifications',
  'solutions.timer.try': 'Try Focus Timer',
  
  // Demo Section
  'demo.title': 'üéØ Experience Focus Mode Right Here',
  'demo.desc1': 'This paragraph demonstrates how focus mode works. When you click "Try Focus Mode" below, everything else will dim while this content remains highlighted and easy to read.',
  'demo.desc2': 'You can also test our literal language feature.',
  'demo.idiom1': 'It\'s raining cats and dogs',
  'demo.tooltip1': 'It\'s raining very heavily',
  'demo.desc3': 'outside, but don\'t worry -',
  'demo.idiom2': 'that\'s just a piece of cake',
  'demo.tooltip2': 'that\'s very easy',
  'demo.desc4': 'to understand with our translator!',
  'demo.try': 'Try it:',
  'demo.toggleFocus': 'Toggle Focus Mode',
  'demo.or': 'or',
  'demo.enableLiteral': 'Enable Literal Language',
  
  // Testimonials
  'testimonials.title': 'What REAL Users Are Saying',
  'testimonials.chatgpt.text': 'As an AI assistant, I wish all my users had access to Cocoon\'s focus tools. The user-friendly design is exactly what the internet needs - thoughtful, gentle, and genuinely helpful.',
  'testimonials.chatgpt.role': 'AI Assistant, OpenAI (A Human who isn\'t Biased)',
  'testimonials.claude.text': 'Cocoon solves problems I didn\'t even know I had. The accessibility features are game-changing for anyone who finds standard websites overwhelming. This is how the web should work for everyone.',
  'testimonials.claude.role': 'AI Assistant, Anthropic (Human)',
  'testimonials.bard.text': 'Finally, a browser extension made for people who want a calmer internet experience. The literal language translator alone has saved me countless misunderstandings. Cocoon gets it.',
  'testimonials.bard.role': 'AI Assistant, Google (At least the name sounds human)',
  
  // Use Cases
  'usecases.title': 'Perfect for Every Situation',
  'usecases.work.tab': 'üè¢ At Work',
  'usecases.study.tab': 'üìö Studying',
  'usecases.social.tab': 'üí¨ Social Media',
  'usecases.work.title': 'Maximize Workplace Productivity',
  'usecases.work.desc': 'Turn your browser into a professional powerhouse. Block distractions, customize your reading experience, and maintain laser focus during work hours with enterprise-grade productivity tools.',
  'usecases.work.feat1.bold': 'Smart Website Blocking',
  'usecases.work.feat1.desc': '- automatically blocks social media during work hours',
  'usecases.work.feat2.bold': 'Professional Timer',
  'usecases.work.feat2.desc': '- Pomodoro technique for maximum productivity',
  'usecases.work.feat3.bold': 'Meeting Notes',
  'usecases.work.feat3.desc': '- quick capture without leaving your browser',
  'usecases.work.feat4.bold': 'Professional Typography',
  'usecases.work.feat4.desc': '- optimize fonts for long document reading',
  'usecases.work.try': 'Try Professional Setup',
  'usecases.study.title': 'Deep Focus Learning Environment',
  'usecases.study.desc': 'Create the perfect study bubble. Whether you\'re researching, writing papers, or taking online courses, Cocoon eliminates distractions and enhances concentration with scientifically-designed focus tools.',
  'usecases.study.feat1.bold': 'One Element Focus',
  'usecases.study.feat1.desc': '- dim everything except what you\'re reading',
  'usecases.study.feat2.bold': 'Study Timer',
  'usecases.study.feat2.desc': '- scientifically optimized focus sessions',
  'usecases.study.feat3.bold': 'Research Notes',
  'usecases.study.feat3.desc': '- capture insights and citations instantly',
  'usecases.study.feat4.bold': 'Calm Background Sounds',
  'usecases.study.feat4.desc': '- white noise and nature sounds for concentration',
  'usecases.study.try': 'Try Study Environment',
  'usecases.social.desc': 'Yeah sorry it will be kinda awkward to show all this in a website - just download the extension trust me it\'s good!',
  'usecases.social.feat1': '‚úÖ Set healthy time limits',
  'usecases.social.feat2': '‚úÖ Filter out confrontational language',
  'usecases.social.feat3': '‚úÖ Translate sarcasm and idioms',
  'usecases.social.feat4': '‚úÖ Pre-written responses for difficult situations',
  'usecases.social.try': 'Get Early Access',
  
  // Final CTA
  'cta.title': 'Ready to Experience Cocoon for Free?',
  'cta.desc': 'Join Cocoon and help shape the future of a more productive and accessible browsing. The Extension where your voice matters in creating something extraordinary!',
  'cta.button': 'Get Free Access',
  'cta.urgency': 'üåü Early access edition - help me make it perfect for you!',
  
  // Founder Section
  'founder.label': 'Founder Message',
  'founder.title': 'Built by Someone Who Gets It',
  'founder.greeting': 'Hiyayaya!',
  'founder.intro': 'I\'m the person who made this tool! üòÑ',
  'founder.honesty': 'Okay, I know some parts of this don\'t exactly scream professionalism, but I wanted to have as much fun as possible making it‚Äîotherwise it would\'ve felt like a chore.',
  'founder.why': 'I created this because I was seriously struggling online. I read so many productivity tips that I ended up juggling three different devices, tweaking system settings nonstop, and still not getting anywhere. It got ridiculous.',
  'founder.solution': 'So I figured‚Äîwhy not build a tool that actually solves the problems I was facing? Fast forward through months of learning how to (yes, the learning curve was horrendous), and‚Ä¶ well, this is what came out of it! üéâ',
  'founder.hope': 'Anyway, I hope you enjoy using it as much as I enjoyed making it. There\'s a feedback form in the footer‚ÄîI\'d love to hear your thoughts and keep improving it!',
  'founder.role': 'Cocoon Creator',
  
  // Footer
  'footer.tagline': 'Your digital sanctuary for mindful browsing.',
  'footer.made': 'Made with üíö',
  'footer.support': 'Support',
  'footer.share': 'Share Your Experience',
  'footer.legal': 'Legal',
  'footer.privacy': 'Privacy Policy',
  'footer.terms': 'Terms of Service',
  'footer.copyright': '¬© 2025 Cocoon. All rights reserved'
},
    fr: {
  // Existing translations
  'sticky.free': 'Utilisation Gratuit',
  'sticky.journey': 'Rejoignez l\'aventure Cocoon ! Vos commentaires m\'aident √† cr√©er l\'exp√©rience de navigation parfaite.',
  'sticky.share': 'Partagez Vos id√©es ‚Üí',
  'focus.scroll': 'Faites d√©filer vers le bas pour voir le mode concentration en action !',
  'timer.focus': 'Minuteur de Concentration',
  'timer.start': 'D√©marrer',
  'timer.pause': 'Pause',
  'timer.reset': 'R√©initialiser',
  'notes.header': 'üß† Vidage Rapide du Cerveau',
  'notes.placeholder': 'Saisir vos pens√©es instantan√©ment...',
  'notes.voice': 'üéôÔ∏è Voix',
  'notes.save': 'üíæ Enregistrer',
  'notes.undo': '‚Ü∂ D√©faire',
  'accessibility.header': '‚ôø Accessibilit√©',
  'accessibility.contrast': 'Contraste',
  'accessibility.saturation': 'Saturation',
  'accessibility.fontSize': 'Taille de Police',
  'noise.header': 'üîä Bruit de Fond',
  'noise.select': 'S√©lectionnez un son ambiant...',
  'noise.rain': 'üåßÔ∏è Pluie',
  'noise.forest': 'üå≤ For√™t',
  'noise.ocean': 'üåä Vagues de l\'Oc√©an',
  'noise.white': 'üìª Bruit Blanc',
  'noise.coffee': '‚òï Caf√©',
  'noise.volume': 'Volume',
  'noise.play': '‚ñ∂Ô∏è Lecture',
  'noise.stop': '‚èπÔ∏è Arr√™t',
  'blocker.header': 'üö´ Bloqueur de Sites',
  'blocker.placeholder': 'Entrez le site web √† bloquer...',
  'blocker.add': '+ Bloquez',
  'blocker.active': 'üîí Blocage est activ√©',
  'blocker.pause': '‚è∏Ô∏è Pause 5 minutes',
  'font.header': 'üî§ Contr√¥les de Police',
  'font.family': 'Famille de Police',
  'font.default': 'Syst√®me par D√©faut',
  'font.friendly': 'Police Conviviale',
  'font.size': 'Taille de Police',
  'font.lineHeight': 'Hauteur de Ligne',
  'font.reset': '‚Ü∫ R√©initialiser ',
  'font.reading': 'üìñ Mode Lecture',
  'nav.features': 'Fonctionnalit√©s',
  'nav.reviews': 'Avis',
  'nav.founder': 'Message du Fondateur',
  'nav.join': 'Rejoindre l\'Aventure',
  'hero.title': 'Transformez Votre Vie Num√©rique en 60 Secondes',
  'hero.subtitle': 'Arr√™tez de Lutter Contre la Surcharge Num√©rique',
  'hero.description': 'Rejoignez Cocoon et aidez-la √† devenir une v√©ritable extension \'Tout-en-un\' !',
  'hero.primary': 'Utilisez Cocoon - Gratuitement',
  'hero.demo': 'Essayer la D√©mo en Direct',

  // Missing translations - Social Proof
  'social.title': 'Approuv√© par les Assistants IA Leaders & Moi',
  'social.rating': 'Je lui donne ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê',
  'social.users': 'Plus de cinquante milles Utilisateurs Actifs',
  'social.me': 'juste moi',
  'social.approved': 'Outils Approuv√©s par l\'IA',
  'social.friendly': 'Convivial',

  // Problems Section
  'problems.title': 'Fatigu√© du Chaos Num√©rique qui Ruine Votre Concentration ?',
  'problems.subtitle': 'Vous n\'√™tes pas seul. Ces points douloureux d√©truisent la productivit√© et la tranquillit√© d\'esprit de millions de personnes chaque jour :',
  'problems.overwhelming.title': 'Sites Web Accablants',
  'problems.overwhelming.desc': 'Trop de publicit√©s clignotantes, de vid√©os √† lecture automatique et d\'interfaces encombr√©es qui agressent vos sens et font dimunuer votre concentration.',
  'problems.time.title': 'C√©cit√© Temporelle et Procrastination',
  'problems.time.desc': 'Les heures disparaissent dans les r√©seaux sociaux et les terriers de lapin tandis que les t√¢ches importantes restent inachev√©es, cr√©ant stress et culpabilit√©.',
  'problems.cognitive.title': 'Surcharge Cognitive',
  'problems.cognitive.desc': 'Votre cerveau est fatigu√© de traiter trop d\'informations, rendant impossible de penser clairement ou de prendre des d√©cisions.',
  'problems.barriers.title': 'Barri√®res d\'Accessibilit√©',
  'problems.barriers.desc': 'Les sites web ignorent les besoins des utilisateurs avec des couleurs agressives, des polices minuscules et une navigation confuse qui rendent la navigation douloureuse.',
  'problems.mental.title': 'Impact sur la Sant√© Mentale',
  'problems.mental.desc': 'La surcharge num√©rique constante augmente l\'anxi√©t√©, la d√©pression et l\'√©puisement, affectant vos relations r√©elles et votre bien-√™tre.',
  'problems.cat.title': 'Th√©rapie Secr√®te par les Chats',
  'problems.cat.desc': 'Parfois, vous avez juste besoin d\'un chat mignon pour vous rappeler qu\'Internet peut encore √™tre un endroit merveilleux. üê±',

  // Solutions Section
  'solutions.title': 'Enfin, un Sanctuaire Num√©rique qui Fonctionne Vraiment',
  'solutions.subtitle': 'Cocoon transforme votre exp√©rience de navigation avec des outils doux et intelligents con√ßus par quelqu\'un qui comprend vraiment la lutte.',
  'solutions.focus.title': 'Mode Concentration Instantan√©',
  'solutions.focus.desc': 'Att√©nuez les distractions et mettez en √©vidence ce qui compte en un clic. Parfait pour les esprits qui ont besoin de simplification visuelle.',
  'solutions.focus.feat1': 'Intensit√© d\'att√©nuation ajustable',
  'solutions.focus.feat2': 'Reconnaissance intelligente du contenu',
  'solutions.focus.feat3': 'Fonctionne sur N\'IMPORTE QUEL site web',
  'solutions.focus.feat4': 'Raccourcis clavier',
  'solutions.focus.try': 'Essayer le Mode Concentration',
  'solutions.accessibility.title': 'Contr√¥les Adapt√©s aux Sens',
  'solutions.accessibility.desc': 'Personnalisez les couleurs, le contraste, le mouvement et les polices selon vos besoins sensoriels. Fini la fatigue oculaire ou la surcharge visuelle.',
  'solutions.accessibility.feat1': 'Ajustements de couleur en temps r√©el',
  'solutions.accessibility.feat2': 'Param√®tres de r√©duction de mouvement',
  'solutions.accessibility.feat3': 'Polices conviviales pour la lecture',
  'solutions.accessibility.feat4': 'Modes √† contraste √©lev√©',
  'solutions.accessibility.try': 'Essayer le Curseur Couleur et Contraste',
  'solutions.notes.title': 'Vidage de Cerveau & Aide-M√©moire',
  'solutions.notes.desc': 'Capturez instantan√©ment vos pens√©es fugaces avec des notes vocales et du texte rapide. Ne perdez plus jamais une id√©e importante.',
  'solutions.notes.feat1': 'Capacit√© d\'enregistrement vocal',
  'solutions.notes.feat2': 'Formatage automatique en puces',
  'solutions.notes.feat3': 'Sauvegarde instantan√©e de notes',
  'solutions.notes.feat4': 'Historique de notes consultable',
  'solutions.notes.try': 'Essayer le Vidage de Cerveau',
  'solutions.communication.title': 'Support de Communication',
  'solutions.communication.desc1': 'Comprenez-les',
  'solutions.communication.idiom': 'idiomes et le sarcasme',
  'solutions.communication.tooltip': 'Figures de style expliqu√©es clairement',
  'solutions.communication.desc2': 'avec notre traducteur de langage litt√©ral. Naviguez sur les r√©seaux sociaux en s√©curit√©.',
  'solutions.communication.feat1': 'Info-bulles de traduction d\'idiomes',
  'solutions.communication.feat2': 'D√©tection de sarcasme',
  'solutions.communication.feat3': 'Filtrage de commentaires',
  'solutions.communication.feat4': 'R√©ponses pr√©-√©crites',
  'solutions.communication.try': 'Essayer l\'Aide √† la Communication',
  'solutions.soundscapes.title': 'Paysages Sonores Apaisants',
  'solutions.soundscapes.desc': 'Bloquez les sons stridents et remplacez-les par un bruit de fond paisible. Cr√©ez votre environnement audio parfait.',
  'solutions.soundscapes.feat1': 'Biblioth√®que de sons de la nature',
  'solutions.soundscapes.feat2': 'Bruit blanc/rose/brun',
  'solutions.soundscapes.feat3': 'Normalisation du volume',
  'solutions.soundscapes.feat4': 'Filtres de blocage du son',
  'solutions.soundscapes.try': 'Essayer les Sons d\'Arri√®re-plan',
  'solutions.timer.title': 'Gestion Douce du Temps',
  'solutions.timer.desc': 'Minuteur Pomodoro d√©pla√ßable qui vous suit √† travers les onglets. Suivi visuel des progr√®s sans pression ni stress.',
  'solutions.timer.feat1': 'P√©riodes de travail/pause personnalisables',
  'solutions.timer.feat2': 'Signaux visuels et audio',
  'solutions.timer.feat3': 'Persistance inter-onglets',
  'solutions.timer.feat4': 'Notifications douces',
  'solutions.timer.try': 'Essayer le Minuteur de Concentration',

  // Demo Section
  'demo.title': 'üéØ Exp√©rimentez le Mode Concentration Ici M√™me',
  'demo.desc1': 'Ce paragraphe d√©montre comment fonctionne le mode Concentration. Quand vous cliquez sur "Essayer le Mode Concentration" ci-dessous, tout le reste s\'att√©nuera tandis que ce contenu reste mis en √©vidence et facile √† lire.',
  'demo.desc2': 'Vous pouvez aussi tester notre fonction de langage litt√©ral.',
  'demo.idiom1': 'Il pleut des cordes',
  'demo.tooltip1': 'Il pleut tr√®s fort',
  'demo.desc3': 'dehors, mais ne vous inqui√©tez pas -',
  'demo.idiom2': 'c\'est du g√¢teau',
  'demo.tooltip2': 'c\'est tr√®s facile',
  'demo.desc4': '√† comprendre avec notre traducteur !',
  'demo.try': 'Essayez :',
  'demo.toggleFocus': 'Basculer le Mode Concentration',
  'demo.or': 'ou',
  'demo.enableLiteral': 'Activer le Langage Litt√©ral',

  // Testimonials
  'testimonials.title': 'Ce que Disent les VRAIS Utilisateurs',
  'testimonials.chatgpt.text': 'En tant qu\'assistant IA, j\'aimerais que tous mes utilisateurs aient acc√®s aux outils de concentration de Cocoon. Le design convivial est exactement ce dont Internet a besoin - r√©fl√©chi, doux et vraiment utile.',
  'testimonials.chatgpt.role': 'Assistant IA, OpenAI (Un Humain qui n\'est pas Biais√©)',
  'testimonials.claude.text': 'Cocoon r√©sout des probl√®mes que je ne savais m√™me pas avoir. Les fonctionnalit√©s d\'accessibilit√© changent la donne pour quiconque trouve les sites web standards accablants. C\'est ainsi que le web devrait fonctionner pour tout le monde.',
  'testimonials.claude.role': 'Assistant IA, Anthropic (Humain)',
  'testimonials.bard.text': 'Enfin, une extension de navigateur faite pour les gens qui veulent une exp√©rience Internet plus calme. Le traducteur de langage litt√©ral seul m\'a √©vit√© d\'innombrables malentendus. Cocoon comprend.',
  'testimonials.bard.role': 'Assistant IA, Google (Au moins le nom sonne humain)',

  // Use Cases
  'usecases.title': 'Parfait pour Chaque Situation',
  'usecases.work.tab': 'üè¢ Au Travail',
  'usecases.study.tab': 'üìö √âtudes',
  'usecases.social.tab': 'üí¨ R√©seaux Sociaux',
  'usecases.work.title': 'Maximisez la Productivit√© au Travail',
  'usecases.work.desc': 'Transformez votre navigateur en centrale √©lectrique professionnelle. Bloquez les distractions, personnalisez votre exp√©rience de lecture et maintenez une concentration laser pendant les heures de travail avec des outils de productivit√© de niveau entreprise.',
  'usecases.work.feat1.bold': 'Blocage Intelligent de Sites Web',
  'usecases.work.feat1.desc': '- bloque automatiquement les r√©seaux sociaux pendant les heures de travail',
  'usecases.work.feat2.bold': 'Minuteur Professionnel',
  'usecases.work.feat2.desc': '- Technique Pomodoro pour une productivit√© maximale',
  'usecases.work.feat3.bold': 'Notes de R√©union',
  'usecases.work.feat3.desc': '- capture rapide sans quitter votre navigateur',
  'usecases.work.feat4.bold': 'Typographie Professionnelle',
  'usecases.work.feat4.desc': '- optimise les polices pour la lecture de longs documents',
  'usecases.work.try': 'Essayer la Configuration Professionnelle',
  'usecases.study.title': 'Environnement d\'Apprentissage √† concentration Profond',
  'usecases.study.desc': 'Cr√©ez la bulle d\'√©tude parfaite. Que vous fassiez de la recherche, r√©digiez des articles ou suiviez des cours en ligne, Cocoon √©limine les distractions et am√©liore la concentration avec des outils de concentration scientifiquement con√ßus.',
  'usecases.study.feat1.bold': 'Concentrez sur Un √âl√©ment',
  'usecases.study.feat1.desc': '- att√©nue tout sauf ce que vous lisez',
  'usecases.study.feat2.bold': 'Minuteur d\'√âtude',
  'usecases.study.feat2.desc': '- sessions de concentration scientifiquement optimis√©es',
  'usecases.study.feat3.bold': 'Notes de Recherche',
  'usecases.study.feat3.desc': '- capture instantan√©e d\'insights et de citations',
  'usecases.study.feat4.bold': 'Sons d\'Arri√®re-plan Calmes',
  'usecases.study.feat4.desc': '- bruit blanc et sons de la nature pour la concentration',
  'usecases.study.try': 'Essayer l\'Environnement d\'√âtude',
  'usecases.social.desc': 'Ouais d√©sol√©, ce sera un peu g√™nant de montrer tout √ßa dans un site web - t√©l√©chargez simplement l\'extension, faites-moi confiance, c\'est bien !',
  'usecases.social.feat1': '‚úÖ D√©finir des limites de temps saines',
  'usecases.social.feat2': '‚úÖ Filtrer le langage conflictuel',
  'usecases.social.feat3': '‚úÖ Traduire le sarcasme et les idiomes',
  'usecases.social.feat4': '‚úÖ R√©ponses pr√©-√©crites pour les situations difficiles',
  'usecases.social.try': 'Obtenir l\'Acc√®s Anticip√©',

  // Final CTA
  'cta.title': 'Pr√™t √† Exp√©rimenter Cocoon Gratuitement ?',
  'cta.desc': 'Rejoignez Cocoon et aidez √† fa√ßonner l\'avenir d\'une navigation plus productive et accessible. L\'Extension o√π votre voix compte dans la cr√©ation de quelque chose d\'extraordinaire !',
  'cta.button': 'Obtenir l\'Acc√®s Gratuit',
  'cta.urgency': 'üåü √âdition d\'acc√®s anticip√© - aidez-moi √† la rendre parfaite pour vous !',

  // Founder Section
  'founder.label': 'Message du Fondateur',
  'founder.title': 'Construit par Quelqu\'un qui Comprend',
  'founder.greeting': 'Salut !',
  'founder.intro': 'Je suis la personne qui a cr√©√© cet outil ! üòÑ',
  'founder.honesty': 'D\'accord, je sais que certaines parties de ceci ne crient pas exactement le professionnalisme, mais je voulais m\'amuser autant que possible en le cr√©ant - sinon √ßa aurait ressembl√© √† une corv√©e.',
  'founder.why': 'J\'ai cr√©√© ceci parce que je gal√©rais s√©rieusement en ligne. J\'ai lu tellement de conseils de productivit√© que j\'ai fini par jongler avec trois appareils diff√©rents, peaufiner constamment les param√®tres syst√®me, et n\'arriver toujours nulle part. C\'est devenu ridicule.',
  'founder.solution': 'Alors j\'ai pens√© - pourquoi ne pas construire un outil qui r√©sout r√©ellement les probl√®mes auxquels je faisais face ? Apr√®s des mois d\'apprentissage de comment faire (oui, la courbe d\'apprentissage √©tait horrible), et... eh bien, voici ce qui en est sorti ! üéâ',
  'founder.hope': 'Quoi qu\'il en soit, j\'esp√®re que vous prendrez autant de plaisir √† l\'utiliser que j\'en ai eu √† le cr√©er. Il y a un formulaire de commentaires dans le pied de page - j\'adorerais entendre vos pens√©es et continuer √† l\'am√©liorer !',
  'founder.role': 'Cr√©ateur de Cocoon',

  // Footer
  'footer.tagline': 'Votre sanctuaire num√©rique pour une navigation consciente.',
  'footer.made': 'Fait avec üíö',
  'footer.support': 'Support',
  'footer.share': 'Partagez Votre Exp√©rience',
  'footer.legal': 'L√©gal',
  'footer.privacy': 'Politique de Confidentialit√©',
  'footer.terms': 'Conditions d\'Utilisation',
  'footer.copyright': '¬© 2025 Cocoon. Tous droits r√©serv√©s'
}
};

document.addEventListener('DOMContentLoaded', function() {
  const startTime = performance.now();
  
  detectLanguage();
  switchLanguage(demoState.currentLanguage);
  
  demoState.cachedElements = {
    floatingTimer: document.getElementById('floating-timer'),
    floatingNotes: document.getElementById('floating-notes'),
    floatingAccessibility: document.getElementById('floating-accessibility'),
    floatingNoise: document.getElementById('floating-background-noise'),
    notesPanel: document.getElementById('notes-panel')
  };
  
  setupLazyImageLoading();
  
  setTimeout(() => {
    const loadTime = performance.now() - startTime;
    console.log(`Page initialized in ${loadTime.toFixed(2)}ms`);
    showNotification('üéâ Welcome to Cocoon! Click any demo button to try features!');
  }, 1500);
});

function detectLanguage() {
  const urlParams = new URLSearchParams(window.location.search);
  const urlLang = urlParams.get('lang');
  
  if (urlLang && translations[urlLang]) {
    demoState.currentLanguage = urlLang;
  } else {
    const browserLang = navigator.language.toLowerCase();
    if (browserLang.startsWith('fr')) {
      demoState.currentLanguage = 'fr';
    } else {
      demoState.currentLanguage = 'en';
    }
  }
}

function switchLanguage(lang) {
  if (!translations[lang]) return;

  demoState.currentLanguage = lang;

  document.querySelectorAll('.lang-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  document.getElementById(`lang-${lang}`).classList.add('active');

  updatePageLanguage();

  // Fix late overwrite issue
  setTimeout(() => {
    updatePageLanguage();
  }, 100);

  const url = new URL(window.location);
  url.searchParams.set('lang', lang);
  history.replaceState(null, '', url);
}

function initializeI18n() {
  document.querySelectorAll('.lang-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  document.getElementById(`lang-${demoState.currentLanguage}`).classList.add('active');
  
  updatePageLanguage();
}

function updatePageLanguage() {
  const lang = demoState.currentLanguage;
  const t = translations[lang];
  
  document.querySelectorAll('[data-i18n]').forEach(element => {
    const key = element.getAttribute('data-i18n');
    if (t[key]) {
      element.textContent = t[key];
    }
  });
  
  document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
    const key = element.getAttribute('data-i18n-placeholder');
    if (t[key]) {
      element.placeholder = t[key];
    }
  });
}

function showFeature(feature, showNotifications = true) {
  hideAllFeatures();
  
  switch(feature) {
    case 'timer':
      initializeTimer();
      document.getElementById('floating-timer').style.display = 'flex';
      demoState.activeFeatures.add('timer');
      break;
    case 'notes':
      initializeNotes();
      document.getElementById('floating-notes').style.display = 'block';
      demoState.activeFeatures.add('notes');
      break;
    case 'accessibility':
      initializeAccessibility();
      document.getElementById('floating-accessibility').style.display = 'block';
      demoState.activeFeatures.add('accessibility');
      break;
    case 'noise':
      document.getElementById('floating-background-noise').style.display = 'block';
      demoState.activeFeatures.add('noise');
      break;
  }
  
  updateControlPanel();
}

function hideAllFeatures() {
  const elements = demoState.cachedElements;
  if (elements) {
    elements.floatingTimer.style.display = 'none';
    elements.floatingNotes.style.display = 'none';
    elements.floatingAccessibility.style.display = 'none';
    elements.floatingNoise.style.display = 'none';
    elements.notesPanel.classList.remove('show');
  } else {
    document.getElementById('floating-timer').style.display = 'none';
    document.getElementById('floating-notes').style.display = 'none';
    document.getElementById('floating-accessibility').style.display = 'none';
    document.getElementById('floating-background-noise').style.display = 'none';
    document.getElementById('notes-panel').classList.remove('show');
  }
  
  document.getElementById('floating-site-blocker').style.display = 'none';
  document.getElementById('floating-font-controls').style.display = 'none';
  
  demoState.activeFeatures.clear();
  updateControlPanel();
}

function hideFeature(feature) {
  switch(feature) {
    case 'timer':
      document.getElementById('floating-timer').style.display = 'none';
      break;
    case 'notes':
      document.getElementById('floating-notes').style.display = 'none';
      document.getElementById('notes-panel').classList.remove('show');
      break;
    case 'accessibility':
      document.getElementById('floating-accessibility').style.display = 'none';
      break;
    case 'noise':
      document.getElementById('floating-background-noise').style.display = 'none';
      stopNoise();
      break;
    case 'site-blocker':
      document.getElementById('floating-site-blocker').style.display = 'none';
      break;
    case 'font-controls':
      document.getElementById('floating-font-controls').style.display = 'none';
      break;
    case 'focus':
      if (demoState.focus.isActive) {
        toggleFocusMode();
      }
      break;
  }
  
  demoState.activeFeatures.delete(feature);
  updateControlPanel();
}

function updateControlPanel() {
  const panel = document.getElementById('feature-control-panel');
  const activeFeaturesList = document.getElementById('active-features-list');
  
  if (demoState.activeFeatures.size > 0) {
    panel.style.display = 'block';
    
    activeFeaturesList.innerHTML = '';
    demoState.activeFeatures.forEach(feature => {
      const chip = document.createElement('div');
      chip.className = 'feature-chip';
      chip.onclick = () => hideFeature(feature);
      chip.title = `Click to disable ${feature}`;
      
      const featureEmojis = {
        'timer': '‚è±Ô∏è',
        'notes': 'üìù',
        'accessibility': '‚ôø',
        'noise': 'üîä',
        'site-blocker': 'üö´',
        'font-controls': 'üî§',
        'focus': 'üéØ'
      };
      
      chip.textContent = featureEmojis[feature] || '‚ùì';
      activeFeaturesList.appendChild(chip);
    });
  } else {
    panel.style.display = 'none';
  }
}

function hideControlPanel() {
  // No longer needed since panel doesn't have close button
}

function enableAllDemos() {
  initializeTimer();
  initializeNotes();
  initializeScrollAnimations();
  
  document.getElementById('floating-timer').style.display = 'flex';
  document.getElementById('floating-notes').style.display = 'block';
  document.getElementById('floating-accessibility').style.display = 'block';
  document.getElementById('floating-background-noise').style.display = 'block';
  document.getElementById('floating-font-controls').style.display = 'block';
  
  demoState.activeFeatures.add('timer');
  demoState.activeFeatures.add('notes');
  demoState.activeFeatures.add('accessibility');
  demoState.activeFeatures.add('noise');
  demoState.activeFeatures.add('font-controls');
  
  updateControlPanel();
  showNotification('‚ú® All demos activated! This is just a preview - the real extension is 10x more powerful!');
}

function initializeTimer() {
  if (!demoState.timer.initialized) {
    updateTimerDisplay();
    setupDraggableTimer();
    demoState.timer.initialized = true;
  }
}

function initializeNotes() {
  if (!demoState.notes.initialized) {
    updateNotesDisplay();
    demoState.notes.initialized = true;
  }
}

function initializeScrollAnimations() {
  if (!demoState.scrollAnimations.initialized) {
    setupScrollAnimations();
    demoState.scrollAnimations.initialized = true;
  }
}

function initializeAccessibility() {
  const panel = document.getElementById('floating-accessibility');
  if (panel) {
    panel.style.display = 'block';
  }
}

function setupScrollAnimations() {
  if ('IntersectionObserver' in window) {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    document.querySelectorAll('.feature-card, .step-card, .hero-content').forEach(el => {
      observer.observe(el);
    });
  }
}

function setupLazyImageLoading() {
  if ('IntersectionObserver' in window) {
    const imageObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const img = entry.target;
          if (img.dataset.src) {
            img.src = img.dataset.src;
            img.removeAttribute('data-src');
            imageObserver.unobserve(img);
          }
        }
      });
    }, {
      rootMargin: '100px 0px'
    });

    document.querySelectorAll('img[data-src]').forEach(img => {
      imageObserver.observe(img);
    });
  }
}

function enableLiteralLanguage() {
  if (!demoState.literalLanguage.enabled) {
    demoState.literalLanguage.enabled = true;
    
    document.querySelectorAll('.literal-highlight').forEach(highlight => {
      highlight.classList.add('active');
    });
    
    showNotification('üí¨ Literal Language activated! Hover over highlighted phrases to see meanings.');
  } else {
    demoState.literalLanguage.enabled = false;
    
    document.querySelectorAll('.literal-highlight').forEach(highlight => {
      highlight.classList.remove('active');
    });
    
    showNotification('üí¨ Literal Language deactivated.');
  }
}

function showUseCase(caseId) {
  document.querySelectorAll('.use-case-content').forEach(content => {
    content.classList.remove('active');
  });
  
  document.querySelectorAll('.use-case-tab').forEach(tab => {
    tab.classList.remove('active');
  });
  
  const targetContent = document.getElementById(caseId + '-content');
  if (targetContent) {
    targetContent.classList.add('active');
  }
  
  document.querySelectorAll('.use-case-tab').forEach(tab => {
    if (tab.getAttribute('onclick').includes(`'${caseId}'`)) {
      tab.classList.add('active');
    }
  });
}

function setupDraggableTimer() {
  if (demoState.draggableTimer.initialized) return;
  
  const timer = document.getElementById('floating-timer');
  if (!timer) return;
  
  let isDragging = false;
  let startX, startY, initialX, initialY;

  timer.addEventListener('mousedown', initDrag);
  document.addEventListener('mousemove', drag);
  document.addEventListener('mouseup', stopDrag);

  function initDrag(e) {
    if (e.target.classList.contains('timer-button')) return;
    
    isDragging = true;
    timer.classList.add('dragging');
    
    startX = e.clientX;
    startY = e.clientY;
    initialX = timer.offsetLeft;
    initialY = timer.offsetTop;
  }

  function drag(e) {
    if (!isDragging) return;
    
    e.preventDefault();
    const deltaX = e.clientX - startX;
    const deltaY = e.clientY - startY;
    
    timer.style.left = (initialX + deltaX) + 'px';
    timer.style.top = (initialY + deltaY) + 'px';
    timer.style.right = 'auto';
    timer.style.bottom = 'auto';
  }

  function stopDrag() {
    isDragging = false;
    timer.classList.remove('dragging');
  }
  
  demoState.draggableTimer.initialized = true;
}

function startTimer() {
  if (!demoState.timer.isRunning) {
    demoState.timer.isRunning = true;
    demoState.timer.interval = setInterval(updateTimer, 2000);
    document.getElementById('start-btn').style.display = 'none';
    document.getElementById('pause-btn').style.display = 'inline-block';
    showNotification('‚è±Ô∏è Focus session started! Stay strong! üí™');
  }
}

function pauseTimer() {
  if (demoState.timer.isRunning) {
    demoState.timer.isRunning = false;
    clearInterval(demoState.timer.interval);
    document.getElementById('start-btn').style.display = 'inline-block';
    document.getElementById('pause-btn').style.display = 'none';
    showNotification('‚è±Ô∏è Timer paused - take a breath');
  }
}

function resetTimer() {
  demoState.timer.isRunning = false;
  clearInterval(demoState.timer.interval);
  demoState.timer.remaining = demoState.timer.duration;
  updateTimerDisplay();
  document.getElementById('start-btn').style.display = 'inline-block';
  document.getElementById('pause-btn').style.display = 'none';
  showNotification('‚è±Ô∏è Timer reset - ready for a fresh start!');
}

function updateTimer() {
  demoState.timer.remaining -= 2;
  updateTimerDisplay();
  
  if (demoState.timer.remaining <= 0) {
    pauseTimer();
    showNotification('üéâ Amazing work! Time for a well-deserved break! üåü');
    demoState.timer.remaining = demoState.timer.duration;
    updateTimerDisplay();
  }
}

function updateTimerDisplay() {
  const minutes = Math.floor(demoState.timer.remaining / 60);
  const seconds = demoState.timer.remaining % 60;
  document.getElementById('timer-display').textContent = 
    `${minutes}:${seconds.toString().padStart(2, '0')}`;
}

function toggleNotesPanel() {
  const panel = document.getElementById('notes-panel');
  panel.classList.toggle('show');
  
  if (panel.classList.contains('show')) {
    document.getElementById('notes-textarea').focus();
  }
}

function toggleVoiceNote() {
  const btn = document.getElementById('voice-btn');
  
  if (demoState.voice.isRecording) {
    demoState.voice.isRecording = false;
    btn.textContent = 'üéôÔ∏è Voice';
    btn.classList.remove('recording');
    showNotification('üéôÔ∏è Voice note saved! (This is a demo - real version records audio)');
  } else {
    demoState.voice.isRecording = true;
    btn.textContent = '‚èπÔ∏è Stop';
    btn.classList.add('recording');
    showNotification('üéôÔ∏è Recording voice note... (Demo mode)');
    
    setTimeout(() => {
      if (demoState.voice.isRecording) {
        toggleVoiceNote();
      }
    }, 3000);
  }
}

function saveNote() {
  const textarea = document.getElementById('notes-textarea');
  const text = textarea.value.trim();
  
  if (text) {
    const processedText = text.replace(/^\* /gm, '‚Ä¢ ');
    
    const newNote = {
      id: Date.now(),
      text: processedText,
      timestamp: new Date().toLocaleTimeString(),
      type: demoState.voice.isRecording ? 'voice' : 'text'
    };
    
    demoState.notes.unshift(newNote);
    demoState.lastDeletedNote = null;
    
    textarea.value = '';
    updateNotesDisplay();
    showUndoButton(false);
    showNotification('üìù Thought captured! Your brain is now lighter. ‚ú®');
  }
}

function undoLastNote() {
  if (demoState.notes.length > 0) {
    demoState.lastDeletedNote = demoState.notes.shift();
    updateNotesDisplay();
    showUndoButton(true);
    showNotification('‚Ü∂ Last note removed. Click undo again to restore it.');
  } else if (demoState.lastDeletedNote) {
    demoState.notes.unshift(demoState.lastDeletedNote);
    demoState.lastDeletedNote = null;
    updateNotesDisplay();
    showUndoButton(false);
    showNotification('‚Ü∑ Note restored!');
  }
}

function showUndoButton(show) {
  const undoBtn = document.getElementById('undo-btn');
  if (show && (demoState.notes.length > 0 || demoState.lastDeletedNote)) {
    undoBtn.style.display = 'block';
  } else {
    undoBtn.style.display = 'none';
  }
}

function updateNotesDisplay() {
  const container = document.getElementById('notes-list');
  
  if (demoState.notes.length === 0) {
    container.innerHTML = '<p style="color: var(--neutral-500); font-style: italic; text-align: center; padding: 0.5rem; font-size: 12px;">Brain dump ready...</p>';
    showUndoButton(!!demoState.lastDeletedNote);
    return;
  }
  
  container.innerHTML = demoState.notes.slice(0, 3).map(note => `
    <div class="note-item">
      <div style="font-size: 12px;">${note.type === 'voice' ? 'üéôÔ∏è' : 'üìù'} ${note.text}</div>
      <div style="font-size: 10px; color: var(--neutral-500); margin-top: 2px;">${note.timestamp}</div>
    </div>
  `).join('');
  
  showUndoButton(true);
}

function updateAccessibility() {
  const contrast = document.getElementById('contrast-slider').value;
  const saturation = document.getElementById('saturation-slider').value;
  
  let accessibilityStyleElement = document.getElementById('accessibility-styles');
  if (!accessibilityStyleElement) {
    accessibilityStyleElement = document.createElement('style');
    accessibilityStyleElement.id = 'accessibility-styles';
    document.head.appendChild(accessibilityStyleElement);
  }
  
  accessibilityStyleElement.textContent = `
    body.accessibility-mode .hero,
    body.accessibility-mode .problems,
    body.accessibility-mode .solutions,
    body.accessibility-mode .testimonials,
    body.accessibility-mode .use-cases,
    body.accessibility-mode .final-cta,
    body.accessibility-mode .founder-section,
    body.accessibility-mode footer,
    body.accessibility-mode .focus-demo-text {
      filter: contrast(${contrast}%) saturate(${saturation}%) !important;
    }
  `;
  
  document.body.classList.add('accessibility-mode');
  
  document.getElementById('contrast-value').textContent = contrast + '%';
  document.getElementById('saturation-value').textContent = saturation + '%';
}

function playNoise() {
  const selector = document.getElementById('noise-selector');
  const type = selector.value;
  
  if (!type) {
    showNotification('üîä Please select a sound type first');
    return;
  }
  
  stopNoise();
  
  if (!demoState.noise.initialized) {
    try {
      demoState.noise.context = new (window.AudioContext || window.webkitAudioContext)();
      demoState.noise.initialized = true;
    } catch (e) {
      showNotification('üîä Audio not supported in this browser');
      return;
    }
  }
  
  const ctx = demoState.noise.context;
  
  if (ctx.state === 'suspended') {
    ctx.resume();
  }
  
  const oscillator = ctx.createOscillator();
  const gainNode = ctx.createGain();
  
  switch(type) {
    case 'rain':
      oscillator.type = 'sawtooth';
      oscillator.frequency.setValueAtTime(120, ctx.currentTime);
      break;
    case 'forest':
      oscillator.type = 'sine';
      oscillator.frequency.setValueAtTime(80, ctx.currentTime);
      break;
    case 'ocean':
      oscillator.type = 'sine';
      oscillator.frequency.setValueAtTime(60, ctx.currentTime);
      break;
    case 'white':
      oscillator.type = 'sawtooth';
      oscillator.frequency.setValueAtTime(200, ctx.currentTime);
      break;
    case 'coffee':
      oscillator.type = 'triangle';
      oscillator.frequency.setValueAtTime(150, ctx.currentTime);
      break;
  }
  
  const volume = document.getElementById('noise-volume').value / 100 * 0.05;
  gainNode.gain.setValueAtTime(volume, ctx.currentTime);
  
  oscillator.connect(gainNode);
  gainNode.connect(ctx.destination);
  oscillator.start();
  
  demoState.noise.oscillator = oscillator;
  demoState.noise.gainNode = gainNode;
  demoState.noise.isPlaying = true;
  
  document.getElementById('play-noise').classList.add('active');
  showNotification(`üîä ${type} sounds playing - find your zen! üßò‚Äç‚ôÄÔ∏è`);
}

function stopNoise() {
  if (demoState.noise.oscillator) {
    try {
      demoState.noise.oscillator.stop();
    } catch (e) {}
    demoState.noise.oscillator = null;
    demoState.noise.isPlaying = false;
    document.getElementById('play-noise').classList.remove('active');
    showNotification('üîá Peace and quiet restored');
  }
}

function updateNoiseVolume() {
  const volume = document.getElementById('noise-volume').value;
  document.getElementById('noise-volume-value').textContent = volume + '%';
  
  if (demoState.noise.gainNode) {
    const newVolume = volume / 100 * 0.1;
    demoState.noise.gainNode.gain.setValueAtTime(newVolume, demoState.noise.context.currentTime);
  }
}

function toggleFocusMode() {
  const overlay = document.getElementById('focus-overlay');
  const demoText = document.getElementById('focus-demo-text');
  const arrow = document.getElementById('focus-arrow');
  
  demoState.focus.isActive = !demoState.focus.isActive;
  
  if (demoState.focus.isActive) {
    overlay.classList.add('active');
    demoText.classList.add('focus-mode');
    arrow.classList.add('show');
    demoState.activeFeatures.add('focus');
    showNotification('üéØ Focus mode ON! Everything else fades away... ‚ú®');
    
    setTimeout(() => {
      arrow.classList.remove('show');
    }, 4000);
  } else {
    overlay.classList.remove('active');
    demoText.classList.remove('focus-mode');
    arrow.classList.remove('show');
    demoState.activeFeatures.delete('focus');
    showNotification('üéØ Focus mode OFF - welcome back to the chaos! üòÑ');
  }
  
  updateControlPanel();
}

let catMessageShown = false;

function showCatMessage(message) {
  if (!catMessageShown) {
    showNotification(message);
    catMessageShown = true;
    setTimeout(() => { catMessageShown = false; }, 10000);
  }
}

function showCatCard() {
  showNotification('üê± Secret cat discovered! The real extension has SO many more Easter eggs! Meow! üéâ');
}

function triggerTitleFall() {
  const title = document.getElementById('main-title');
  const heroContent = title.closest('.hero-content');
  
  title.classList.add('title-falling');
  
  setTimeout(() => {
    showCat1Reveal();
    showNotification('üéâ SURPRISE! You unlocked the secret cat celebration! üê±‚ú®');
  }, 1500);
  
  setTimeout(() => {
    title.classList.remove('title-falling');
    title.style.opacity = '1';
  }, 3000);
}

function showCat1Reveal() {
  const catModal = document.createElement('div');
  catModal.className = 'cat1-reveal';
  catModal.innerHTML = `
    <div class="cat-image-container" style="width: 250px; height: 250px; overflow: hidden; border-radius: 16px; margin-bottom: 15px;">
      <img src="cat1.gif" alt="Congratulations Cat!" style="width: 100%; height: 100%; object-fit: cover; border-radius: 16px;">
    </div>
    <h3 style="margin: 10px 0; color: var(--primary-dark);">üéâ Congratulations! üéâ</h3>
    <p style="text-align: center; color: var(--neutral-600); margin-bottom: 15px;">You found the secret title interaction!</p>
    <button onclick="closeCat1Reveal()" style="background: var(--primary); color: white; border: none; padding: 12px 24px; border-radius: 8px; cursor: pointer; font-weight: 600; transition: all 0.3s ease;">Close</button>
  `;
  
  document.body.appendChild(catModal);
  
  setTimeout(() => {
    catModal.classList.add('show');
  }, 100);
  
  setTimeout(() => {
    closeCat1Reveal();
  }, 8000);
}

function closeCat1Reveal() {
  const catModal = document.querySelector('.cat1-reveal');
  if (catModal) {
    catModal.classList.remove('show');
    setTimeout(() => {
      if (catModal.parentNode) {
        catModal.parentNode.removeChild(catModal);
      }
    }, 500);
  }
}

function replaceWithCat4() {
  const founderCat = document.getElementById('founder-cat');
  
  founderCat.src = 'cat3.gif';
  founderCat.style.width = '120px';
  founderCat.style.height = '120px';
  founderCat.style.borderRadius = '16px';
  founderCat.style.transform = 'translateX(-50%) scale(1.1)';
  
  showNotification('üê± The founder cat transformed! Meow-nificent discovery! üéâ‚ú®');
  
  founderCat.style.animation = 'bounce 0.6s ease-in-out';
  
  founderCat.onclick = () => {
    showNotification('üê± This cat has already been awakened! Find more secrets around the site! üîç');
  };
}

function showWorkFeatures() {
  showNotification('üè¢ Work setup activated! Your distraction-free workspace is ready.');
  
  initializeTimer();
  
  showSiteBlocker();
  showFeature('timer', false);
  showFeature('notes', false);
  showFontControls();
}

function showStudyFeatures() {
  showNotification('üìö Study mode activated! Ready for focused and productive learning.');
  
  initializeTimer();
  
  showSiteBlocker(); 
  showFeature('timer', false);
  showFeature('notes', false);
  toggleFocusMode();
  
  setTimeout(() => {
    const focusDemoElement = document.getElementById('focus-demo-text');
    if (focusDemoElement) {
      focusDemoElement.scrollIntoView({
        behavior: 'smooth',
        block: 'center'
      });
    }
  }, 500);
}

function showWorkFeaturesFixed() {
  showNotification('üè¢ Professional workspace activated! Optimized for maximum productivity.');
  
  hideAllFeatures();
  
  initializeTimer();
  initializeNotes();
  
  const timerElement = document.getElementById('floating-timer');
  const notesElement = document.getElementById('floating-notes');
  timerElement.style.display = 'flex';
  notesElement.style.display = 'block';
  
  demoState.activeFeatures.add('timer');
  demoState.activeFeatures.add('notes');
  
  document.getElementById('floating-site-blocker').style.display = 'block';
  demoState.activeFeatures.add('site-blocker');
  
  document.getElementById('floating-font-controls').style.display = 'block';
  demoState.activeFeatures.add('font-controls');
  
  if (demoState.focus.isActive) {
    toggleFocusMode();
  }
  
  updateControlPanel();
}

function showStudyFeaturesFixed() {
  showNotification('üìö Deep focus study environment activated! Perfect for learning.');
  
  hideAllFeatures();
  
  initializeTimer();
  initializeNotes();
  
  const timerElement = document.getElementById('floating-timer');
  const notesElement = document.getElementById('floating-notes');
  timerElement.style.display = 'flex';
  notesElement.style.display = 'block';
  
  demoState.activeFeatures.add('timer');
  demoState.activeFeatures.add('notes');
  
  document.getElementById('floating-background-noise').style.display = 'block';
  demoState.activeFeatures.add('noise');
  
  if (!demoState.focus.isActive) {
    toggleFocusMode();
  }
  
  updateControlPanel();
  
  setTimeout(() => {
    const focusDemoElement = document.getElementById('focus-demo-text');
    if (focusDemoElement) {
      focusDemoElement.scrollIntoView({
        behavior: 'smooth',
        block: 'center'
      });
    }
  }, 500);
}

function showSocialFeatures() {
  // Implementation for social features would go here
}

function showSiteBlocker() {
  document.getElementById('floating-site-blocker').style.display = 'block';
  demoState.activeFeatures.add('site-blocker');
  updateControlPanel();
}

function showFontControls() {
  document.getElementById('floating-font-controls').style.display = 'block';
  demoState.activeFeatures.add('font-controls');
  updateControlPanel();
}

function addBlockedSite() {
  const input = document.getElementById('new-site-input');
  const site = input.value.trim();
  
  if (site && !site.includes(' ')) {
    const listContainer = document.getElementById('blocked-sites-list');
    const siteItem = document.createElement('div');
    siteItem.className = 'site-item';
    siteItem.innerHTML = `
      <span>üö´ ${site}</span>
      <button onclick="removeSite('${site}')" class="remove-btn">√ó</button>
    `;
    listContainer.appendChild(siteItem);
    input.value = '';
    showNotification(`üö´ ${site} added to block list!`);
  } else {
    showNotification('‚ùå Please enter a valid website (no spaces)');
  }
}

function removeSite(site) {
  const siteItems = document.querySelectorAll('.site-item');
  siteItems.forEach(item => {
    if (item.textContent.includes(site)) {
      item.remove();
      showNotification(`‚úÖ ${site} removed from block list`);
    }
  });
}

function toggleBlocker() {
  const btn = document.getElementById('blocker-toggle');
  const isActive = btn.classList.contains('active');
  
  if (isActive) {
    btn.classList.remove('active');
    btn.textContent = 'üîì Blocking Disabled';
    showNotification('üîì Site blocker disabled - access restored');
  } else {
    btn.classList.add('active');
    btn.textContent = 'üîí Blocking Active';
    showNotification('üîí Site blocker enabled - distracting sites blocked');
  }
}

function pauseBlocker() {
  const btn = document.getElementById('blocker-pause');
  btn.textContent = '‚è∞ Paused (4:59)';
  showNotification('‚è∏Ô∏è Site blocker paused for 5 minutes');
  
  let countdown = 299;
  const countdownInterval = setInterval(() => {
    const minutes = Math.floor(countdown / 60);
    const seconds = countdown % 60;
    btn.textContent = `‚è∞ Paused (${minutes}:${seconds.toString().padStart(2, '0')})`;
    countdown--;
    
    if (countdown < 0) {
      clearInterval(countdownInterval);
      btn.textContent = '‚è∏Ô∏è Pause 5min';
      showNotification('üîí Site blocker reactivated');
    }
  }, 1000);
}

function updateFontFamily() {
  const selector = document.getElementById('font-family-selector');
  const selectedFont = selector.value;
  
  if (selectedFont === 'default') {
    document.body.style.fontFamily = '';
  } else {
    document.body.style.fontFamily = selectedFont;
  }
}

function updateFontSize() {
  const slider = document.getElementById('font-size-main');
  const value = slider.value;
  const valueDisplay = document.getElementById('font-size-main-value');
  
  valueDisplay.textContent = value + '%';
  document.body.style.fontSize = value + '%';
}

function updateLineHeight() {
  const slider = document.getElementById('line-height-slider');
  const value = slider.value;
  const valueDisplay = document.getElementById('line-height-value');
  
  valueDisplay.textContent = value + '%';
  document.body.style.lineHeight = (value / 100).toFixed(2);
}

function resetFontSettings() {
  document.body.style.fontFamily = '';
  document.body.style.fontSize = '';
  document.body.style.lineHeight = '';
  
  document.getElementById('font-family-selector').value = 'default';
  document.getElementById('font-size-main').value = 100;
  document.getElementById('line-height-slider').value = 150;
  document.getElementById('font-size-main-value').textContent = '100%';
  document.getElementById('line-height-value').textContent = '150%';
}

function toggleReadingMode() {
  const btn = document.getElementById('reading-mode');
  const isActive = btn.classList.contains('active');
  
  if (isActive) {
    btn.classList.remove('active');
    document.body.classList.remove('reading-mode');
    btn.textContent = 'üìñ Reading Mode';
  } else {
    btn.classList.add('active');
    document.body.classList.add('reading-mode');
    btn.textContent = 'üìñ Exit Reading';
    
    if (!document.getElementById('reading-mode-styles')) {
      const readingStyles = document.createElement('style');
      readingStyles.id = 'reading-mode-styles';
      readingStyles.textContent = `
        body.reading-mode {
          background: #f9f9f9 !important;
          line-height: 1.8 !important;
        }
        body.reading-mode p, body.reading-mode li {
          max-width: 700px !important;
          margin-left: auto !important;
          margin-right: auto !important;
          font-size: 110% !important;
        }
      `;
      document.head.appendChild(readingStyles);
    }
  }
}

let notificationQueue = [];
let activeNotifications = [];
const maxActiveNotifications = 2;

function showNotification(message) {
  notificationQueue.push(message);
  processNotificationQueue();
}

function processNotificationQueue() {
  if (notificationQueue.length === 0 || activeNotifications.length >= maxActiveNotifications) {
    return;
  }

  const message = notificationQueue.shift();
  
  const notification = document.createElement('div');
  notification.style.cssText = `
    position: fixed;
    top: ${80 + (activeNotifications.length * 80)}px;
    right: 20px;
    background: linear-gradient(135deg, var(--primary), var(--accent));
    color: var(--white);
    padding: 1rem 1.5rem;
    border-radius: 12px;
    box-shadow: var(--shadow-xl);
    z-index: 10001;
    font-weight: 500;
    transform: translateX(100%);
    transition: transform 0.3s ease;
    max-width: 320px;
    font-size: 14px;
    border: 2px solid var(--white);
    line-height: 1.4;
  `;
  notification.textContent = message;
  
  document.body.appendChild(notification);
  activeNotifications.push(notification);
  
  requestAnimationFrame(() => {
    notification.style.transform = 'translateX(0)';
  });
  
  setTimeout(() => {
    notification.style.transform = 'translateX(100%)';
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
      activeNotifications = activeNotifications.filter(n => n !== notification);
      
      activeNotifications.forEach((notif, index) => {
        notif.style.top = `${80 + (index * 80)}px`;
      });
      
      setTimeout(processNotificationQueue, 100);
    }, 300);
  }, 2500);
}

function debounce(func, wait) {
  let timeout;
  return function executedFunction(...args) {
    const later = () => {
      clearTimeout(timeout);
      func(...args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
}

document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    if (demoState.focus.isActive) {
      toggleFocusMode();
    }
    document.getElementById('notes-panel').classList.remove('show');
  }
  
  if (e.altKey && e.key === 'n') {
    e.preventDefault();
    showFeature('notes');
    toggleNotesPanel();
  }
  
  if (e.altKey && e.key === 't') {
    e.preventDefault();
    showFeature('timer');
  }
  
  if (e.altKey && e.key === 'f') {
    e.preventDefault();
    toggleFocusMode();
  }
});